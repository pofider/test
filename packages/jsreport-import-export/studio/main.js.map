{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"Studio\"","webpack:///external \"Studio.libraries['react']\"","webpack:///./studio/main_dev.js","webpack:///./studio/ExportModal.js","webpack:///external \"Studio.libraries['filesaver.js-npm']\"","webpack:///./studio/ImportModal.js"],"names":["Studio","addToolbarComponent","props","openModal","ExportModal","closeMenu","ImportModal","addEntityTreeContextMenuItemsResolver","node","entity","editSelection","isRoot","isGroupEntity","getAllEntitiesInHierarchy","items","push","key","title","icon","onClick","__entitySet","selectedFolderShortid","shortid","selected","initialSelected","grouped","entityTreeDropResolvers","type","dragAndDropNativeTypes","FILE","handler","draggedItem","dragOverContext","dropComplete","files","targetInfo","containerTargetEntity","length","test","name","opts","selectedFile","options","selections","references","getExportableReferences","getReferences","Object","keys","forEach","k","e","Array","isArray","s","_id","state","processing","handleSelectionChange","bind","exportableEntitySets","extensions","reduce","acu","entitySetName","indexOf","setState","api","post","data","selection","filter","responseType","response","fileSaver","saveAs","alert","message","stack","height","overflow","download","display","Component","EntityRefSelect","FileInput","sharedComponents","ImportFinishedModal","setTimeout","confirmBtn","focus","reset","catch","close","console","error","log","width","boxSizing","el","confirm","fullImport","retryWithContinueOnFail","validated","handleImportModeChange","ev","target","value","file","status","params","targetFolder","attach","filename","result","continueOnFail","stateToUpdate","canContinueAfterFail","padding","margin","borderWidth","marginLeft","opacity","verticalAlign","paddingLeft","paddingRight","border","marginBottom","maxHeight","minHeight","folders","isGroup","modalProps","entitySet","marginTop","validate","cancel","import"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = Studio;","module.exports = Studio.libraries['react'];","import ExportModal from './ExportModal.js'\nimport ImportModal from './ImportModal.js'\nimport Studio from 'jsreport-studio'\n\nStudio.addToolbarComponent((props) => (\n  <div\n    className='toolbar-button'\n    onClick={() => {\n      Studio.openModal(ExportModal)\n      props.closeMenu()\n    }}\n  >\n    <i className='fa fa-download' />Export\n  </div>\n), 'settings')\n\nStudio.addToolbarComponent((props) => (\n  <div\n    className='toolbar-button'\n    onClick={() => {\n      Studio.openModal(ImportModal)\n      props.closeMenu()\n    }}\n  >\n    <i className='fa fa-upload' />Import\n  </div>\n), 'settings')\n\nStudio.addEntityTreeContextMenuItemsResolver(({\n  node,\n  entity,\n  editSelection,\n  isRoot,\n  isGroupEntity,\n  getAllEntitiesInHierarchy\n}) => {\n  if (editSelection != null) {\n    return\n  }\n\n  const items = []\n\n  if (isRoot) {\n    items.push({\n      key: 'Import',\n      title: 'Import',\n      icon: 'fa-upload',\n      onClick: () => {\n        Studio.openModal(ImportModal)\n      }\n    })\n\n    items.push({\n      key: 'Export',\n      title: 'Export',\n      icon: 'fa-download',\n      onClick: () => {\n        Studio.openModal(ExportModal)\n      }\n    })\n  } else if (isGroupEntity && entity.__entitySet === 'folders') {\n    items.push({\n      key: 'Import',\n      title: 'Import into folder',\n      icon: 'fa-upload',\n      onClick: () => {\n        Studio.openModal(ImportModal, { selectedFolderShortid: entity.shortid })\n      }\n    })\n\n    items.push({\n      key: 'Export',\n      title: 'Export folder',\n      icon: 'fa-download',\n      onClick: () => {\n        const selected = getAllEntitiesInHierarchy(node, true)\n        Studio.openModal(ExportModal, { initialSelected: selected })\n      }\n    })\n  }\n\n  return {\n    grouped: true,\n    items\n  }\n})\n\nStudio.entityTreeDropResolvers.push({\n  type: Studio.dragAndDropNativeTypes.FILE,\n  async handler ({\n    draggedItem,\n    dragOverContext,\n    dropComplete\n  }) {\n    const files = draggedItem.files\n\n    const targetInfo = {\n      shortid: null\n    }\n\n    if (dragOverContext && dragOverContext.containerTargetEntity) {\n      targetInfo.shortid = dragOverContext.containerTargetEntity.shortid\n    }\n\n    if (\n      files &&\n      files.length === 1 &&\n      (\n        /\\.zip$/.test(files[0].name) ||\n        /\\.jsrexport$/.test(files[0].name)\n      )\n    ) {\n      dropComplete()\n\n      const opts = {\n        selectedFile: files[0]\n      }\n\n      if (targetInfo.shortid) {\n        opts.selectedFolderShortid = targetInfo.shortid\n      }\n\n      Studio.openModal(ImportModal, opts)\n    }\n  }\n})\n","import React, { Component } from 'react'\nimport Studio, { EntityTree } from 'jsreport-studio'\nimport fileSaver from 'filesaver.js-npm'\n\nexport default class ExportModal extends Component {\n  constructor (props) {\n    super(props)\n\n    const { options } = props\n\n    const selections = {}\n\n    const references = this.getExportableReferences(Studio.getReferences())\n\n    Object.keys(references).forEach((k) => {\n      Object.keys(references[k]).forEach((e) => {\n        if (options.initialSelected != null) {\n          const selected = Array.isArray(options.initialSelected) ? options.initialSelected : [options.initialSelected]\n\n          selected.forEach((s) => {\n            if (references[k][e]._id === s) {\n              selections[references[k][e]._id] = true\n            } else if (selections[references[k][e]._id] == null) {\n              selections[references[k][e]._id] = false\n            }\n          })\n        } else {\n          selections[references[k][e]._id] = true\n        }\n      })\n    })\n\n    this.state = {}\n    this.state.processing = false\n    this.state.selected = selections\n\n    this.handleSelectionChange = this.handleSelectionChange.bind(this)\n  }\n\n  getExportableReferences (references) {\n    const exportableEntitySets = Studio.extensions['import-export'].options.exportableEntitySets\n\n    return Object.keys(references).reduce((acu, entitySetName) => {\n      if (exportableEntitySets.indexOf(entitySetName) !== -1) {\n        acu[entitySetName] = references[entitySetName]\n      }\n\n      return acu\n    }, {})\n  }\n\n  async download () {\n    if (this.state.processing) {\n      return\n    }\n\n    this.setState({\n      processing: true\n    })\n\n    try {\n      const response = await Studio.api.post('api/export', {\n        data: {\n          selection: Object.keys(this.state.selected).filter((k) => this.state.selected[k] === true)\n        },\n        responseType: 'blob'\n      }, true)\n\n      fileSaver.saveAs(response, 'export.jsrexport')\n\n      this.setState({\n        processing: false\n      })\n    } catch (e) {\n      this.setState({\n        processing: false\n      })\n\n      alert('Unable to prepare export ' + e.message + ' ' + e.stack)\n    }\n  }\n\n  handleSelectionChange (selected) {\n    this.setState({\n      selected\n    })\n  }\n\n  render () {\n    const references = this.getExportableReferences(Studio.getReferences())\n    const { selected, processing } = this.state\n\n    return (\n      <div className='form-group'>\n        <div>\n          <h1><i className='fa fa-download' /> Export objects</h1>\n        </div>\n        <div style={{ height: '30rem', overflow: 'auto' }}>\n          <EntityTree\n            entities={references}\n            selectable\n            selected={selected}\n            onSelectionChanged={this.handleSelectionChange}\n          />\n        </div>\n        <div className='button-bar'>\n          <a className={`button confirmation ${processing ? 'disabled' : ''}`} onClick={() => this.download()}>\n            <i className='fa fa-circle-o-notch fa-spin' style={{ display: processing ? 'inline-block' : 'none' }} />\n            <span style={{ display: processing ? 'none' : 'inline' }}>Download</span>\n          </a>\n        </div>\n      </div>\n    )\n  }\n}\n","module.exports = Studio.libraries['filesaver.js-npm'];","import React, { Component } from 'react'\nimport Studio from 'jsreport-studio'\n\nconst EntityRefSelect = Studio.EntityRefSelect\nconst FileInput = Studio.FileInput\nconst sharedComponents = Studio.sharedComponents\n\nclass ImportFinishedModal extends Component {\n  componentDidMount () {\n    setTimeout(() => this.confirmBtn.focus(), 0)\n  }\n\n  componentWillUnmount () {\n    Studio.reset().catch(() => {})\n  }\n\n  confirm () {\n    this.props.close()\n\n    Studio.reset().catch((e) => { console.error(e) })\n  }\n\n  render () {\n    const { log } = this.props.options\n\n    return (\n      <div>\n        <h1><i className='fa fa-info-circle' /> Import finished</h1>\n        {log != null && log !== '' && (\n          <div className='form-group'>\n            <div>\n              <i>Some errors/warnings happened during the import:</i>\n            </div>\n            <textarea style={{ width: '100%', boxSizing: 'border-box' }} rows='10' readOnly value={log} />\n          </div>\n        )}\n        <div className='form-group'>\n          <i>Now we need to reload the studio..</i>\n        </div>\n        <div className='button-bar'>\n          <button ref={(el) => { this.confirmBtn = el }} className='button confirmation' onClick={() => this.confirm()}>\n            Ok\n          </button>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass ImportModal extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      selectedFolderShortid: props.options != null && props.options.selectedFolderShortid ? props.options.selectedFolderShortid : null,\n      fullImport: false,\n      retryWithContinueOnFail: false,\n      validated: false\n    }\n\n    if (props.options && props.options.selectedFile) {\n      this.state.selectedFile = props.options.selectedFile\n    }\n\n    this.handleImportModeChange = this.handleImportModeChange.bind(this)\n  }\n\n  handleImportModeChange (ev) {\n    if (this.state.processing === true || this.state.validated) {\n      return\n    }\n\n    let fullImport = false\n\n    if (ev.target.value === 'full') {\n      fullImport = true\n    }\n\n    this.setState({\n      fullImport\n    })\n  }\n\n  async validate (file) {\n    if (!file || this.state.processing) {\n      return\n    }\n\n    this.setState({\n      status: '1',\n      processing: true,\n      log: 'Validating import....'\n    })\n\n    try {\n      const params = {\n        fullImport: this.state.fullImport\n      }\n\n      if (this.state.selectedFolderShortid != null) {\n        params.targetFolder = this.state.selectedFolderShortid\n      }\n\n      const result = await Studio.api.post('api/validate-import', {\n        params,\n        attach: { filename: 'import.jsrexport', file }\n      }, true)\n\n      this.setState({\n        validated: true,\n        status: result.status,\n        processing: false,\n        log: result.log\n      })\n    } catch (e) {\n      this.setState({\n        validated: true,\n        status: '1',\n        processing: false,\n        log: e.message + ' ' + e.stack\n      })\n    }\n  }\n\n  async import () {\n    if (this.state.processing) {\n      return\n    }\n\n    const { retryWithContinueOnFail } = this.state\n\n    try {\n      this.setState({\n        status: '1',\n        processing: true,\n        log: 'Working on import....'\n      })\n\n      const params = {\n        fullImport: this.state.fullImport,\n        continueOnFail: retryWithContinueOnFail\n      }\n\n      if (this.state.selectedFolderShortid != null) {\n        params.targetFolder = this.state.selectedFolderShortid\n      }\n\n      const result = await Studio.api.post('api/import', {\n        params,\n        attach: { filename: 'import.jsrexport', file: this.state.selectedFile }\n      }, true)\n\n      this.setState({\n        processing: false,\n        retryWithContinueOnFail: false\n      })\n\n      Studio.openModal(ImportFinishedModal, {\n        log: result.log\n      })\n    } catch (e) {\n      const stateToUpdate = {\n        status: '1',\n        processing: false,\n        log: e.message + ' ' + e.stack\n      }\n\n      if (!retryWithContinueOnFail && e.canContinueAfterFail) {\n        stateToUpdate.retryWithContinueOnFail = true\n      } else {\n        stateToUpdate.retryWithContinueOnFail = false\n      }\n\n      this.setState(stateToUpdate)\n    }\n  }\n\n  cancel () {\n    if (this.state.processing) {\n      return\n    }\n\n    this.setState({\n      status: null,\n      log: null,\n      retryWithContinueOnFail: false,\n      validated: false\n    })\n  }\n\n  render () {\n    return (\n      <div>\n        <h1><i className='fa fa-upload' /> Import objects</h1>\n        <div className='form-group'>\n          <p>\n            A <b>validation is run first</b>, so you can safely upload the exported package and review the changes which will be performed. Afterwards <b>you can confirm or cancel the import</b>.\n          </p>\n        </div>\n        <div className='form-group'>\n          <FileInput\n            placeholder='select export file to import...'\n            selectedFile={this.state.selectedFile}\n            onFileSelect={(file) => this.setState({ selectedFile: file })}\n            disabled={this.state.processing === true || this.state.validated}\n          />\n        </div>\n        <div className='form-group'>\n          <fieldset style={{ padding: '0px', margin: '0px', borderWidth: '1px' }}>\n            <legend style={{ marginLeft: '0.2rem' }}>Options</legend>\n            <div className='form-group'>\n              <div style={{ opacity: (this.state.processing === true || this.state.validated) ? 0.7 : 1 }}>\n                <label>\n                  <input\n                    type='radio'\n                    name='import-mode'\n                    value='merge'\n                    style={{ verticalAlign: 'middle', margin: '0px' }}\n                    checked={!this.state.fullImport}\n                    onChange={this.handleImportModeChange}\n                  />\n                  <span style={{ display: 'inline-block', verticalAlign: 'middle', paddingLeft: '0.2rem', paddingRight: '0.5rem' }}>Merge</span>\n                </label>\n                <label>\n                  <input\n                    type='radio'\n                    name='import-mode'\n                    value='full'\n                    style={{ verticalAlign: 'middle', margin: '0px' }}\n                    checked={this.state.fullImport}\n                    onChange={this.handleImportModeChange}\n                  />\n                  <span style={{ display: 'inline-block', verticalAlign: 'middle', paddingLeft: '0.2rem', paddingRight: '0.5rem' }}>Full</span>\n                </label>\n              </div>\n            </div>\n            <div className='form-group'>\n              <div\n                style={{\n                  display: !this.state.fullImport ? 'block' : 'none',\n                  border: '1px dashed black',\n                  padding: '0.6rem',\n                  opacity: (this.state.processing === true || this.state.validated) ? 0.7 : 1\n                }}\n              >\n                <label style={{ display: 'inline-block', marginBottom: '5px' }}>\n                  <b>Optionally</b> you can select a folder in which the entities  will be inserted\n                </label>\n                <div style={{ maxHeight: '20rem', overflow: 'auto' }}>\n                  <EntityRefSelect\n                    noModal\n                    treeStyle={{ minHeight: 'auto', maxHeight: 'none' }}\n                    headingLabel='Select folder'\n                    newLabel='New folder for import'\n                    filter={(references) => ({ folders: references.folders })}\n                    selectableFilter={(isGroup, entity) => entity.__entitySet === 'folders'}\n                    value={this.state.selectedFolderShortid}\n                    disabled={this.state.processing === true || this.state.validated}\n                    onChange={(selected) => {\n                      this.setState({\n                        selectedFolderShortid: selected.length > 0 ? selected[0].shortid : null\n                      })\n                    }}\n                    renderNew={(modalProps) => <sharedComponents.NewFolderModal {...modalProps} options={{ ...modalProps.options, entitySet: 'folders' }} />}\n                  />\n                </div>\n              </div>\n              {this.state.fullImport && (\n                <p style={{ marginTop: '10px' }}>\n                  A <b>full import</b> means that <b>all the entities that are not present in the export file will be deleted</b>, after the import <b>you will have only the entities that were present in the export file</b>.\n                </p>\n              )}\n            </div>\n          </fieldset>\n        </div>\n        <div className='form-group'>\n          {!this.state.validated && (\n            <div className='button-bar'>\n              <button\n                className={`button confirmation ${this.state.processing ? 'disabled' : ''}`}\n                style={{ opacity: this.state.selectedFile == null ? 0.7 : 1 }}\n                disabled={this.state.selectedFile == null}\n                onClick={() => this.validate(this.state.selectedFile)}\n              >\n                <i className='fa fa-circle-o-notch fa-spin' style={{ display: this.state.processing ? 'inline-block' : 'none' }} />\n                <span style={{ display: this.state.processing ? 'none' : 'inline' }}>Validate</span>\n              </button>\n            </div>\n          )}\n          <br />\n          {this.state.validated && (\n            <div>\n              <div>\n                <i>Log of changes with the import:</i>\n              </div>\n              <textarea style={{ width: '100%', boxSizing: 'border-box' }} rows='10' readOnly value={this.state.log} />\n            </div>\n          )}\n          {this.state.validated && (\n            <div className='button-bar'>\n              <button className={`button danger ${this.state.processing ? 'disabled' : ''}`} onClick={() => this.cancel()}>\n                Cancel\n              </button>\n              {(this.state.status === '0' || this.state.retryWithContinueOnFail) && (\n                <button className={`button confirmation ${this.state.processing ? 'disabled' : ''}`} onClick={() => this.import()}>\n                  <i className='fa fa-circle-o-notch fa-spin' style={{ display: this.state.processing ? 'inline-block' : 'none' }} />\n                  <span style={{ display: this.state.processing ? 'none' : 'inline' }}>{this.state.retryWithContinueOnFail ? 'Ignore errors and continue' : 'Import'}</span>\n                </button>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ImportModal\n"],"sourceRoot":""}