{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./studio/main_dev.js","webpack:///./studio/ElectronPdfProperties.js","webpack:///external \"Studio.libraries['react']\"","webpack:///external \"Studio\""],"names":["Studio","addPropertiesComponent","ElectronPdfProperties","entity","__entitySet","recipe","props","state","customPaperFormat","paperWidth","paperHeight","name","value","normalizeUIState","prevProps","_id","width","height","onChange","stateToSet","paperSize","electron","format","isNaN","parseInt","JSON","stringify","Object","keys","length","setState","__isNew","standardFormats","getStandardFormats","map","customFormat","indexOf","parse","e","change","marginsType","v","target","changeCustomPaperSize","checked","display","paperFormat","landscape","printBackground","printDelay","waitForJS","blockJavaScript","Component"],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;AClFA;;;;AACA;;;;;;AAEAA,yBAAOC,sBAAP,CACE,cADF,EAEEC,+BAFF,EAGE,UAACC,MAAD;AAAA,SAAYA,OAAOC,WAAP,KAAuB,WAAvB,IAAsCD,OAAOE,MAAP,KAAkB,cAApE;AAAA,CAHF,E;;;;;;;;;;;;;;;;;ACHA;;;;;;;;;;;;IAEMH,qB;;;AACJ,iCAAaI,KAAb,EAAoB;AAAA;;AAAA,8IACZA,KADY;;AAGlB,UAAKC,KAAL,GAAa;AACXC,yBAAmB,KADR;AAEXC,kBAAY,IAFD;AAGXC,mBAAa;AAHF,KAAb;AAHkB;AAQnB;;;;yCAEqB;AACpB,aAAO,CAAC;AACNC,cAAM,IADA;AAENC,eAAO;AAFD,OAAD,EAGJ;AACDD,cAAM,IADL;AAEDC,eAAO;AAFN,OAHI,EAMJ;AACDD,cAAM,OADL;AAEDC,eAAO;AAFN,OANI,EASJ;AACDD,cAAM,QADL;AAEDC,eAAO;AAFN,OATI,EAYJ;AACDD,cAAM,SADL;AAEDC,eAAO;AAFN,OAZI,CAAP;AAgBD;;;wCAEoB;AACnB,WAAKC,gBAAL,CAAsB,KAAKP,KAAL,CAAWH,MAAjC;AACD;;;uCAEmBW,S,EAAW;AAC7B;AACA;AACA,UAAIA,UAAUX,MAAV,CAAiBY,GAAjB,KAAyB,KAAKT,KAAL,CAAWH,MAAX,CAAkBY,GAA/C,EAAoD;AAClD,aAAKF,gBAAL,CAAsB,KAAKP,KAAL,CAAWH,MAAjC;AACD;AACF;;;gDAE4D;AAAA,UAApCa,KAAoC,QAApCA,KAAoC;AAAA,UAA7BC,MAA6B,QAA7BA,MAA6B;AAAA,UAArBT,iBAAqB,QAArBA,iBAAqB;AAAA,mBACvB,KAAKD,KADkB;AAAA,UACnDE,UADmD,UACnDA,UADmD;AAAA,UACvCC,WADuC,UACvCA,WADuC;AAAA,mBAE9B,KAAKJ,KAFyB;AAAA,UAEnDH,MAFmD,UAEnDA,MAFmD;AAAA,UAE3Ce,QAF2C,UAE3CA,QAF2C;;AAG3D,UAAMC,aAAa,EAAnB;AACA,UAAMC,YAAY,EAAlB;;AAEA,UAAIZ,sBAAsB,KAA1B,EAAiC;AAC/BW,mBAAWX,iBAAX,GAA+BA,iBAA/B;AACAW,mBAAWV,UAAX,GAAwB,IAAxB;AACAU,mBAAWT,WAAX,GAAyB,IAAzB;;AAEAQ,8BAAcf,MAAd,IAAsBkB,uBAAelB,OAAOkB,QAAtB,IAAgCC,QAAQ,IAAxC,GAAtB;AACD,OAND,MAMO;AACL,YAAId,qBAAqB,IAAzB,EAA+B;AAC7BW,qBAAWX,iBAAX,GAA+BA,iBAA/B;AACD;;AAED,YAAIQ,SAAS,IAAb,EAAmB;AACjB,cAAI,CAACO,MAAMC,SAASR,KAAT,EAAgB,EAAhB,CAAN,CAAL,EAAiC;AAC/BI,sBAAUJ,KAAV,GAAkBQ,SAASR,KAAT,EAAgB,EAAhB,CAAlB;AACD,WAFD,MAEO;AACLI,sBAAUJ,KAAV,GAAkB,IAAlB;AACD;AACF,SAND,MAMO;AACLI,oBAAUJ,KAAV,GAAkBP,UAAlB;AACD;;AAED,YAAIQ,UAAU,IAAd,EAAoB;AAClB,cAAI,CAACM,MAAMC,SAASP,MAAT,EAAiB,EAAjB,CAAN,CAAL,EAAkC;AAChCG,sBAAUH,MAAV,GAAmBO,SAASP,MAAT,EAAiB,EAAjB,CAAnB;AACD,WAFD,MAEO;AACLG,sBAAUH,MAAV,GAAmB,IAAnB;AACD;AACF,SAND,MAMO;AACLG,oBAAUH,MAAV,GAAmBP,WAAnB;AACD;;AAEDS,mBAAWV,UAAX,GAAwBW,UAAUJ,KAAlC;AACAG,mBAAWT,WAAX,GAAyBU,UAAUH,MAAnC;;AAEA,YAAIG,UAAUJ,KAAV,IAAmB,IAAnB,IAA2BI,UAAUH,MAAV,IAAoB,IAAnD,EAAyD;AACvDC,gCAAcf,MAAd,IAAsBkB,uBAAelB,OAAOkB,QAAtB,IAAgCC,QAAQG,KAAKC,SAAL,CAAeN,SAAf,CAAxC,GAAtB;AACD,SAFD,MAEO;AACLF,gCAAcf,MAAd,IAAsBkB,uBAAelB,OAAOkB,QAAtB,IAAgCC,QAAQ,IAAxC,GAAtB;AACD;AACF;;AAED,UAAIK,OAAOC,IAAP,CAAYT,UAAZ,EAAwBU,MAAxB,GAAiC,CAArC,EAAwC;AACtC,aAAKC,QAAL,CAAcX,UAAd;AACD;AACF;;;qCAEiBhB,M,EAAQ;AACxB,UAAMgB,aAAa,EAAnB;;AAEA,UAAIhB,OAAO4B,OAAX,EAAoB;AAClBZ,mBAAWX,iBAAX,GAA+B,KAA/B;AACAW,mBAAWV,UAAX,GAAwB,IAAxB;AACAU,mBAAWT,WAAX,GAAyB,IAAzB;AACD,OAJD,MAIO;AACLS,mBAAWX,iBAAX,GAA+B,KAA/B;AACAW,mBAAWV,UAAX,GAAwB,IAAxB;AACAU,mBAAWT,WAAX,GAAyB,IAAzB;;AAEA,YAAIP,OAAOkB,QAAP,IAAmBlB,OAAOkB,QAAP,CAAgBC,MAAvC,EAA+C;AAC7C,cAAMU,kBAAkB,KAAKC,kBAAL,GAA0BC,GAA1B,CAA8B;AAAA,mBAAUZ,OAAOV,KAAjB;AAAA,WAA9B,CAAxB;AACA,cAAIuB,qBAAJ;;AAEA,cAAIH,gBAAgBI,OAAhB,CAAwBjC,OAAOkB,QAAP,CAAgBC,MAAxC,MAAoD,CAAC,CAAzD,EAA4D;AAC1D,gBAAI;AACFa,6BAAeV,KAAKY,KAAL,CAAWlC,OAAOkB,QAAP,CAAgBC,MAA3B,CAAf;AACD,aAFD,CAEE,OAAOgB,CAAP,EAAU,CAAE;;AAEd,gBAAIH,YAAJ,EAAkB;AAChBhB,yBAAWX,iBAAX,GAA+B,IAA/B;;AAEA,kBAAI2B,aAAanB,KAAb,IAAsB,IAA1B,EAAgC;AAC9BG,2BAAWV,UAAX,GAAwB0B,aAAanB,KAArC;AACD;;AAED,kBAAImB,aAAalB,MAAb,IAAuB,IAA3B,EAAiC;AAC/BE,2BAAWT,WAAX,GAAyByB,aAAalB,MAAtC;AACD;AACF;AACF;AACF;AACF;;AAED,UAAIU,OAAOC,IAAP,CAAYT,UAAZ,EAAwBU,MAAxB,GAAiC,CAArC,EAAwC;AACtC,aAAKC,QAAL,CAAcX,UAAd;AACD;AACF;;;6BAES;AAAA;;AAAA,oBAC+C,KAAKZ,KADpD;AAAA,UACAC,iBADA,WACAA,iBADA;AAAA,UACmBC,UADnB,WACmBA,UADnB;AAAA,UAC+BC,WAD/B,WAC+BA,WAD/B;AAAA,oBAEqB,KAAKJ,KAF1B;AAAA,UAEAH,MAFA,WAEAA,MAFA;AAAA,UAEQe,QAFR,WAEQA,QAFR;;AAGR,UAAMG,WAAWlB,OAAOkB,QAAP,IAAmB,EAApC;;AAEA,UAAMkB,SAAS,gBAACA,OAAD;AAAA,eAAYrB,sBAAcf,MAAd,IAAsBkB,uBAAelB,OAAOkB,QAAtB,EAAmCkB,OAAnC,CAAtB,IAAZ;AAAA,OAAf;;AAEA,aACE;AAAA;AAAA,UAAK,WAAU,oBAAf;AACE;AAAA;AAAA,YAAK,WAAU,YAAf;AAA4B;AAAA;AAAA;AAAA;AAAA,WAA5B;AACE;AAAA;AAAA,cAAQ,OAAOlB,SAASmB,WAAT,IAAwB,CAAvC,EAA0C,UAAU,kBAACC,CAAD;AAAA,uBAAOF,OAAO,EAAEC,aAAahB,SAASiB,EAAEC,MAAF,CAAS9B,KAAlB,CAAf,EAAP,CAAP;AAAA,eAApD;AACE;AAAA;AAAA,gBAAQ,KAAI,GAAZ,EAAgB,OAAM,GAAtB;AAAA;AAAA,aADF;AAEE;AAAA;AAAA,gBAAQ,KAAI,GAAZ,EAAgB,OAAM,GAAtB;AAAA;AAAA,aAFF;AAGE;AAAA;AAAA,gBAAQ,KAAI,GAAZ,EAAgB,OAAM,GAAtB;AAAA;AAAA;AAHF;AADF,SADF;AAQE;AAAA;AAAA,YAAK,WAAU,YAAf;AACE;AAAA;AAAA;AAAA;AAAA,WADF;AAEE;AAAA;AAAA;AACE;AACE,oBAAK,UADP,EACkB,SAASJ,sBAAsB,IADjD;AAEE,wBAAU,kBAACiC,CAAD;AAAA,uBAAO,OAAKE,qBAAL,CAA2B,EAAEnC,mBAAmBiC,EAAEC,MAAF,CAASE,OAA9B,EAA3B,CAAP;AAAA;AAFZ,cADF;AAAA;AAAA,WAFF;AASGpC,+BACC;AAAA;AAAA;AACE;AAAA;AAAA,gBAAO,OAAO,EAAEqC,SAAS,OAAX,EAAd;AAAA;AACc;AAAA;AAAA,kBAAG,MAAK,0CAAR,EAAmD,QAAO,QAA1D,EAAmE,KAAI,YAAvE;AAAA;AAAA;AADd,aADF;AAIE;AACE,qBAAO,EAAEA,SAAS,OAAX,EAAoB7B,OAAO,MAA3B,EADT;AAEE,oBAAK,MAFP,EAEc,aAAY,QAF1B,EAEmC,OAAOP,UAF1C;AAGE,wBAAU,kBAACgC,CAAD;AAAA,uBAAO,OAAKE,qBAAL,CAA2B,EAAE3B,OAAOyB,EAAEC,MAAF,CAAS9B,KAAlB,EAA3B,CAAP;AAAA;AAHZ;AAJF,WAVJ;AAqBGJ,+BACC;AAAA;AAAA;AACE;AAAA;AAAA,gBAAO,OAAO,EAAEqC,SAAS,OAAX,EAAd;AAAA;AACe;AAAA;AAAA,kBAAG,MAAK,0CAAR,EAAmD,QAAO,QAA1D,EAAmE,KAAI,YAAvE;AAAA;AAAA;AADf,aADF;AAIE;AACE,qBAAO,EAAEA,SAAS,OAAX,EAAoB7B,OAAO,MAA3B,EADT;AAEE,oBAAK,MAFP,EAEc,aAAY,QAF1B,EAEmC,OAAON,WAF1C;AAGE,wBAAU,kBAAC+B,CAAD;AAAA,uBAAO,OAAKE,qBAAL,CAA2B,EAAE1B,QAAQwB,EAAEC,MAAF,CAAS9B,KAAnB,EAA3B,CAAP;AAAA;AAHZ;AAJF,WAtBJ;AAiCGJ,+BACC;AAAA;AAAA;AACE;AAAA;AAAA;AACE;AAAA;AAAA;AACE;AAAA;AAAA,oBAAG,MAAK,iDAAR,EAA0D,QAAO,QAAjE,EAA0E,KAAI,YAA9E;AAAA;AAAA;AADF;AADF;AADF,WAlCJ;AA4CG,WAACA,iBAAD,IACC;AAAA;AAAA,cAAQ,OAAOa,SAASC,MAAT,IAAmB,EAAlC,EAAsC,UAAU,kBAACmB,CAAD;AAAA,uBAAOF,OAAO,EAAEjB,QAAQmB,EAAEC,MAAF,CAAS9B,KAAnB,EAAP,CAAP;AAAA,eAAhD;AACG,iBAAKqB,kBAAL,GAA0BC,GAA1B,CAA8B,UAACY,WAAD;AAAA,qBAC7B;AAAA;AAAA,kBAAQ,KAAKA,YAAYnC,IAAzB,EAA+B,OAAOmC,YAAYlC,KAAlD;AAA0DkC,4BAAYnC;AAAtE,eAD6B;AAAA,aAA9B;AADH;AA7CJ,SARF;AA4DE;AAAA;AAAA,YAAK,WAAU,YAAf;AAA4B;AAAA;AAAA;AAAA;AAAA,WAA5B;AACE;AACE,kBAAK,MADP,EACc,aAAY,KAD1B,EACgC,OAAOU,SAASL,KAAT,IAAkB,EADzD;AAEE,sBAAU,kBAACyB,CAAD;AAAA,qBAAOF,OAAO,EAAEvB,OAAOyB,EAAEC,MAAF,CAAS9B,KAAlB,EAAP,CAAP;AAAA;AAFZ;AADF,SA5DF;AAkEE;AAAA;AAAA,YAAK,WAAU,YAAf;AAA4B;AAAA;AAAA;AAAA;AAAA,WAA5B;AACE;AACE,kBAAK,MADP,EACc,aAAY,KAD1B,EACgC,OAAOS,SAASJ,MAAT,IAAmB,EAD1D;AAEE,sBAAU,kBAACwB,CAAD;AAAA,qBAAOF,OAAO,EAAEtB,QAAQwB,EAAEC,MAAF,CAAS9B,KAAnB,EAAP,CAAP;AAAA;AAFZ;AADF,SAlEF;AAwEE;AAAA;AAAA,YAAK,WAAU,YAAf;AAA4B;AAAA;AAAA;AAAA;AAAA,WAA5B;AACE;AAAA;AAAA,cAAQ,OAAOS,SAAS0B,SAAT,GAAqB,EAApC,EAAwC,UAAU,kBAACN,CAAD;AAAA,uBAAOF,OAAO,EAAEQ,WAAWN,EAAEC,MAAF,CAAS9B,KAAT,KAAmB,MAAhC,EAAP,CAAP;AAAA,eAAlD;AACE;AAAA;AAAA,gBAAQ,KAAI,OAAZ,EAAoB,OAAM,OAA1B;AAAA;AAAA,aADF;AAEE;AAAA;AAAA,gBAAQ,KAAI,MAAZ,EAAmB,OAAM,MAAzB;AAAA;AAAA;AAFF;AADF,SAxEF;AA8EE;AAAA;AAAA,YAAK,WAAU,YAAf;AAA4B;AAAA;AAAA;AAAA;AAAA,WAA5B;AACE;AACE,kBAAK,UADP,EACkB,SAASS,SAAS2B,eAAT,KAA6B,IADxD;AAEE,sBAAU,kBAACP,CAAD;AAAA,qBAAOF,OAAO,EAAES,iBAAiBP,EAAEC,MAAF,CAASE,OAA5B,EAAP,CAAP;AAAA;AAFZ;AADF,SA9EF;AAqFE;AAAA;AAAA,YAAK,WAAU,YAAf;AAA4B;AAAA;AAAA;AAAA;AAAA,WAA5B;AACE;AACE,kBAAK,MADP,EACc,aAAY,KAD1B,EACgC,OAAOvB,SAAS4B,UAAT,IAAuB,EAD9D;AAEE,sBAAU,kBAACR,CAAD;AAAA,qBAAOF,OAAO,EAAEU,YAAYR,EAAEC,MAAF,CAAS9B,KAAvB,EAAP,CAAP;AAAA;AAFZ;AADF,SArFF;AA2FE;AAAA;AAAA,YAAK,WAAU,YAAf;AACE;AAAA;AAAA,cAAO,OAAM,sCAAb;AAAA;AAAA,WADF;AAEE;AACE,kBAAK,UADP,EACkB,OAAM,sCADxB,EAC+D,SAASS,SAAS6B,SAAT,KAAuB,IAD/F;AAEE,sBAAU,kBAACT,CAAD;AAAA,qBAAOF,OAAO,EAAEW,WAAWT,EAAEC,MAAF,CAASE,OAAtB,EAAP,CAAP;AAAA;AAFZ;AAFF,SA3FF;AAkGE;AAAA;AAAA,YAAK,WAAU,YAAf;AACE;AAAA;AAAA;AAAA;AAAA,WADF;AAEE;AACE,kBAAK,UADP,EACkB,SAASvB,SAAS8B,eAAT,KAA6B,IADxD;AAEE,sBAAU,kBAACV,CAAD;AAAA,qBAAOF,OAAO,EAAEY,iBAAiBV,EAAEC,MAAF,CAASE,OAA5B,EAAP,CAAP;AAAA;AAFZ;AAFF;AAlGF,OADF;AA4GD;;;;EA1PiCQ,gB;;kBA6PrBlD,qB;;;;;;AC/Pf,2C;;;;;;ACAA,wB","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import ElectronPdfProperties from './ElectronPdfProperties.js'\nimport Studio from 'jsreport-studio'\n\nStudio.addPropertiesComponent(\n  'electron-pdf',\n  ElectronPdfProperties,\n  (entity) => entity.__entitySet === 'templates' && entity.recipe === 'electron-pdf'\n)\n","import React, { Component } from 'react'\n\nclass ElectronPdfProperties extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      customPaperFormat: false,\n      paperWidth: null,\n      paperHeight: null\n    }\n  }\n\n  getStandardFormats () {\n    return [{\n      name: 'A4',\n      value: 'A4'\n    }, {\n      name: 'A3',\n      value: 'A3'\n    }, {\n      name: 'Legal',\n      value: 'Legal'\n    }, {\n      name: 'Letter',\n      value: 'Letter'\n    }, {\n      name: 'Tabloid',\n      value: 'Tabloid'\n    }]\n  }\n\n  componentDidMount () {\n    this.normalizeUIState(this.props.entity)\n  }\n\n  componentDidUpdate (prevProps) {\n    // when component changes because another entity is selected\n    // or when saving a new entity\n    if (prevProps.entity._id !== this.props.entity._id) {\n      this.normalizeUIState(this.props.entity)\n    }\n  }\n\n  changeCustomPaperSize ({ width, height, customPaperFormat }) {\n    const { paperWidth, paperHeight } = this.state\n    const { entity, onChange } = this.props\n    const stateToSet = {}\n    const paperSize = {}\n\n    if (customPaperFormat === false) {\n      stateToSet.customPaperFormat = customPaperFormat\n      stateToSet.paperWidth = null\n      stateToSet.paperHeight = null\n\n      onChange({ ...entity, electron: { ...entity.electron, format: 'A4' } })\n    } else {\n      if (customPaperFormat != null) {\n        stateToSet.customPaperFormat = customPaperFormat\n      }\n\n      if (width != null) {\n        if (!isNaN(parseInt(width, 10))) {\n          paperSize.width = parseInt(width, 10)\n        } else {\n          paperSize.width = null\n        }\n      } else {\n        paperSize.width = paperWidth\n      }\n\n      if (height != null) {\n        if (!isNaN(parseInt(height, 10))) {\n          paperSize.height = parseInt(height, 10)\n        } else {\n          paperSize.height = null\n        }\n      } else {\n        paperSize.height = paperHeight\n      }\n\n      stateToSet.paperWidth = paperSize.width\n      stateToSet.paperHeight = paperSize.height\n\n      if (paperSize.width != null || paperSize.height != null) {\n        onChange({ ...entity, electron: { ...entity.electron, format: JSON.stringify(paperSize) } })\n      } else {\n        onChange({ ...entity, electron: { ...entity.electron, format: null } })\n      }\n    }\n\n    if (Object.keys(stateToSet).length > 0) {\n      this.setState(stateToSet)\n    }\n  }\n\n  normalizeUIState (entity) {\n    const stateToSet = {}\n\n    if (entity.__isNew) {\n      stateToSet.customPaperFormat = false\n      stateToSet.paperWidth = null\n      stateToSet.paperHeight = null\n    } else {\n      stateToSet.customPaperFormat = false\n      stateToSet.paperWidth = null\n      stateToSet.paperHeight = null\n\n      if (entity.electron && entity.electron.format) {\n        const standardFormats = this.getStandardFormats().map(format => format.value)\n        let customFormat\n\n        if (standardFormats.indexOf(entity.electron.format) === -1) {\n          try {\n            customFormat = JSON.parse(entity.electron.format)\n          } catch (e) {}\n\n          if (customFormat) {\n            stateToSet.customPaperFormat = true\n\n            if (customFormat.width != null) {\n              stateToSet.paperWidth = customFormat.width\n            }\n\n            if (customFormat.height != null) {\n              stateToSet.paperHeight = customFormat.height\n            }\n          }\n        }\n      }\n    }\n\n    if (Object.keys(stateToSet).length > 0) {\n      this.setState(stateToSet)\n    }\n  }\n\n  render () {\n    const { customPaperFormat, paperWidth, paperHeight } = this.state\n    const { entity, onChange } = this.props\n    const electron = entity.electron || {}\n\n    const change = (change) => onChange({ ...entity, electron: { ...entity.electron, ...change } })\n\n    return (\n      <div className='properties-section'>\n        <div className='form-group'><label>Margin type</label>\n          <select value={electron.marginsType || 0} onChange={(v) => change({ marginsType: parseInt(v.target.value) })}>\n            <option key='0' value='0'>Default</option>\n            <option key='1' value='1'>None</option>\n            <option key='2' value='2'>Minimum</option>\n          </select>\n        </div>\n        <div className='form-group'>\n          <label>Paper format</label>\n          <label>\n            <input\n              type='checkbox' checked={customPaperFormat === true}\n              onChange={(v) => this.changeCustomPaperSize({ customPaperFormat: v.target.checked })}\n            />\n            Use custom format\n          </label>\n          {customPaperFormat && (\n            <div>\n              <label style={{ display: 'block' }}>\n                Paper width <a href='https://en.wikipedia.org/wiki/Micrometre' target='_blank' rel='noreferrer'>(in microns)</a>\n              </label>\n              <input\n                style={{ display: 'block', width: '100%' }}\n                type='text' placeholder='148000' value={paperWidth}\n                onChange={(v) => this.changeCustomPaperSize({ width: v.target.value })}\n              />\n            </div>\n          )}\n          {customPaperFormat && (\n            <div>\n              <label style={{ display: 'block' }}>\n                Paper height <a href='https://en.wikipedia.org/wiki/Micrometre' target='_blank' rel='noreferrer'>(in microns)</a>\n              </label>\n              <input\n                style={{ display: 'block', width: '100%' }}\n                type='text' placeholder='210000' value={paperHeight}\n                onChange={(v) => this.changeCustomPaperSize({ height: v.target.value })}\n              />\n            </div>\n          )}\n          {customPaperFormat && (\n            <div>\n              <span>\n                <i>\n                  <a href='http://www.papersizes.org/a-sizes-all-units.htm' target='_blank' rel='noreferrer'>\n                    See this for common paper sizes in microns\n                  </a>\n                </i>\n              </span>\n            </div>\n          )}\n          {!customPaperFormat && (\n            <select value={electron.format || ''} onChange={(v) => change({ format: v.target.value })}>\n              {this.getStandardFormats().map((paperFormat) => (\n                <option key={paperFormat.name} value={paperFormat.value}>{paperFormat.name}</option>\n              ))}\n            </select>\n          )}\n        </div>\n        <div className='form-group'><label>Web Page width</label>\n          <input\n            type='text' placeholder='600' value={electron.width || ''}\n            onChange={(v) => change({ width: v.target.value })}\n          />\n        </div>\n        <div className='form-group'><label>Web Page height</label>\n          <input\n            type='text' placeholder='600' value={electron.height || ''}\n            onChange={(v) => change({ height: v.target.value })}\n          />\n        </div>\n        <div className='form-group'><label>Orientation</label>\n          <select value={electron.landscape + ''} onChange={(v) => change({ landscape: v.target.value === 'true' })}>\n            <option key='false' value='false'>Portrait</option>\n            <option key='true' value='true'>Landscape</option>\n          </select>\n        </div>\n        <div className='form-group'><label>Print background</label>\n          <input\n            type='checkbox' checked={electron.printBackground === true}\n            onChange={(v) => change({ printBackground: v.target.checked })}\n          />\n        </div>\n\n        <div className='form-group'><label>Print delay</label>\n          <input\n            type='text' placeholder='800' value={electron.printDelay || ''}\n            onChange={(v) => change({ printDelay: v.target.value })}\n          />\n        </div>\n        <div className='form-group'>\n          <label title='window.JSREPORT_READY_TO_START=true;'>Wait for printing trigger</label>\n          <input\n            type='checkbox' title='window.JSREPORT_READY_TO_START=true;' checked={electron.waitForJS === true}\n            onChange={(v) => change({ waitForJS: v.target.checked })}\n          />\n        </div>\n        <div className='form-group'>\n          <label>Block javascript</label>\n          <input\n            type='checkbox' checked={electron.blockJavaScript === true}\n            onChange={(v) => change({ blockJavaScript: v.target.checked })}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ElectronPdfProperties\n","module.exports = Studio.libraries['react'];","module.exports = Studio;"],"sourceRoot":""}