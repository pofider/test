{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"Studio.libraries['react']\"","webpack:///external \"Studio\"","webpack:///./studio/scopeOptions.js","webpack:///./studio/main_dev.js","webpack:///./studio/NewScriptModal.js","webpack:///./studio/ScriptEditor.js","webpack:///./studio/TemplateScriptProperties.js","webpack:///./studio/ScriptProperties.js"],"names":["key","title","value","desc","Studio","addEntitySet","name","faIcon","visibleName","onNew","options","openModal","NewScriptModal","helpUrl","referenceAttributes","entityTreePosition","addPropertiesComponent","TemplateScriptProperties","entity","__entitySet","ScriptProperties","addEditorComponent","ScriptEditor","reformatter","content","runListeners","push","request","entities","template","scripts","map","s","script","getEntityByShortid","shortid","filter","__isNew","entityNewListeners","getDefaultScriptContent","entitySaveListeners","indexOf","entityTreeIconResolvers","Object","prototype","hasOwnProperty","call","scope","isGlobal","props","nameInputRef","React","createRef","state","selectedScope","error","processing","setTimeout","current","focus","e","submit","target","val","defaults","setState","api","post","data","_id","cloning","undefined","entitySet","folderShortid","folder","message","close","openNewTab","currentScopeValue","currentScopeOption","scopeOptions","find","opt","handleKeyPress","v","newScope","color","display","marginLeft","marginRight","maxWidth","Component","onUpdate","assign","EntityRefSelect","sharedComponents","getSelectedScripts","removeInvalidScriptReferences","onChange","updatedScripts","keys","k","length","references","selected","modalProps","activateNewTab","renderOrder","getName","foundScripts","sc","join","removeOldIsGlobalProperty"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = Studio.libraries['react'];","module.exports = Studio;","\nexport default [{\n  key: 'template',\n  title: 'template',\n  value: 'template',\n  desc: 'script will only run for the templates it is being explicitly attached'\n}, {\n  key: 'global',\n  title: 'global',\n  value: 'global',\n  desc: 'script will run for all templates'\n}, {\n  key: 'folder',\n  title: 'folder',\n  value: 'folder',\n  desc: 'script will run for all templates in the same folder hierarchy'\n}]\n","import NewScriptModal from './NewScriptModal'\nimport ScriptEditor from './ScriptEditor'\nimport TemplateScriptProperties from './TemplateScriptProperties'\nimport ScriptProperties from './ScriptProperties'\nimport Studio from 'jsreport-studio'\n\nStudio.addEntitySet({\n  name: 'scripts',\n  faIcon: 'fa-cog',\n  visibleName: 'script',\n  onNew: (options) => Studio.openModal(NewScriptModal, options),\n  helpUrl: 'http://jsreport.net/learn/scripts',\n  referenceAttributes: ['isGlobal', 'scope'],\n  entityTreePosition: 800\n})\n\nStudio.addPropertiesComponent(TemplateScriptProperties.title, TemplateScriptProperties, (entity) => entity.__entitySet === 'templates')\nStudio.addPropertiesComponent(ScriptProperties.title, ScriptProperties, (entity) => entity.__entitySet === 'scripts')\n\nStudio.addEditorComponent('scripts', ScriptEditor, (reformatter, entity) => ({ content: reformatter(entity.content, 'js') }))\n\nStudio.runListeners.push((request, entities) => {\n  if (!request.template.scripts) {\n    return\n  }\n\n  request.template.scripts = request.template.scripts.map((s) => {\n    const script = Studio.getEntityByShortid(s.shortid, false)\n\n    if (!script) {\n      return s\n    }\n\n    return script\n  }).filter((s) => !s.__isNew || s.content)\n})\n\nStudio.entityNewListeners.push((entity) => {\n  if (entity.__entitySet === 'scripts' && entity.content == null) {\n    entity.content = getDefaultScriptContent()\n  }\n})\n\nStudio.entitySaveListeners.push((entity) => {\n  if (\n    entity.__entitySet === 'scripts' &&\n    entity.content != null &&\n    entity.content.indexOf('function beforeRender') === -1 &&\n    entity.content.indexOf('function afterRender') === -1\n  ) {\n    Studio.openModal(() => (\n      <div>\n        The script \"{entity.name}\" doesn't have a function hook defined. This means the script won't do anything. You should define either \"beforeRender\" or \"afterRender\" function hooks.\n        <br />See the <a href='https://jsreport.net/learn/scripts'>scripts documentation</a> for the details.\n      </div>\n    ))\n  }\n})\n\nStudio.entityTreeIconResolvers.push((entity) => {\n  if (\n    entity.__entitySet === 'scripts' &&\n    (\n      (\n        Object.prototype.hasOwnProperty.call(entity, 'scope') &&\n        (entity.scope === 'global' ||\n        entity.scope === 'folder')\n      ) || entity.isGlobal\n    )\n  ) {\n    return 'fa-cogs'\n  }\n\n  return null\n})\n\nfunction getDefaultScriptContent () {\n  return (\n    `// Use the \"beforeRender\" or \"afterRender\" hook\n// to manipulate and control the report generation\nasync function beforeRender (req, res) {\n\n}`)\n}\n","import React, { Component } from 'react'\nimport scopeOptions from './scopeOptions'\nimport Studio from 'jsreport-studio'\n\nclass NewScriptModal extends Component {\n  constructor (props) {\n    super(props)\n\n    this.nameInputRef = React.createRef()\n\n    this.state = {\n      selectedScope: 'template',\n      error: null,\n      processing: false\n    }\n  }\n\n  // the modal component for some reason after open focuses the panel itself\n  componentDidMount () {\n    setTimeout(() => this.nameInputRef.current.focus(), 0)\n  }\n\n  handleKeyPress (e) {\n    if (e.key === 'Enter') {\n      this.submit(e.target.value)\n    }\n  }\n\n  async submit (val) {\n    if (this.state.processing) {\n      return\n    }\n\n    const name = val || this.nameInputRef.current.value\n\n    const entity = {\n      ...this.props.options.defaults,\n      name,\n      scope: this.state.selectedScope,\n      __entitySet: 'scripts'\n    }\n\n    this.setState({ processing: true })\n\n    try {\n      await Studio.api.post('/studio/validate-entity-name', {\n        data: {\n          _id: this.props.options.cloning === true ? undefined : entity._id,\n          name: name,\n          entitySet: 'scripts',\n          folderShortid: entity.folder != null ? entity.folder.shortid : null\n        }\n      }, true)\n    } catch (e) {\n      this.setState({\n        error: e.message,\n        processing: false\n      })\n\n      return\n    }\n\n    this.setState({\n      error: null,\n      processing: false\n    })\n\n    this.props.close()\n\n    Studio.openNewTab({\n      entity,\n      entitySet: 'scripts',\n      name\n    })\n  }\n\n  render () {\n    const { selectedScope, error, processing } = this.state\n    const currentScopeValue = selectedScope\n    const currentScopeOption = scopeOptions.find((opt) => opt.value === currentScopeValue)\n\n    return (\n      <div>\n        <div className='form-group'>\n          <label>New script</label>\n        </div>\n        <div className='form-group'>\n          <label>name</label>\n          <input\n            type='text'\n            placeholder='name...'\n            ref={this.nameInputRef}\n            onKeyPress={(e) => this.handleKeyPress(e)}\n          />\n        </div>\n        <div className='form-group'>\n          <label>scope</label>\n          <select\n            value={currentScopeValue}\n            onChange={(v) => {\n              const newScope = v.target.value\n\n              this.setState({\n                selectedScope: newScope\n              })\n            }}\n          >\n            {scopeOptions.map((opt) => (\n              <option key={opt.key} value={opt.value} title={opt.desc}>{opt.title}</option>\n            ))}\n          </select>\n          <em>{currentScopeOption.desc}</em>\n        </div>\n        <div className='form-group'>\n          <span\n            style={{\n              color: 'red',\n              display: error ? 'block' : 'none',\n              marginLeft: 'auto',\n              marginRight: 'auto',\n              maxWidth: '360px'\n            }}\n          >\n            {error}\n          </span>\n        </div>\n        <div className='button-bar'>\n          <button className='button confirmation' disabled={processing} onClick={() => this.submit()}>Ok</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default NewScriptModal\n","import React, { Component } from 'react'\nimport { TextEditor } from 'jsreport-studio'\n\nexport default class ScriptEditor extends Component {\n  render () {\n    const { entity, onUpdate } = this.props\n\n    return (\n      <TextEditor\n        name={entity._id}\n        mode='javascript'\n        value={entity.content}\n        onUpdate={(v) => onUpdate(Object.assign({}, entity, { content: v }))}\n      />\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Studio from 'jsreport-studio'\n\nconst EntityRefSelect = Studio.EntityRefSelect\nconst sharedComponents = Studio.sharedComponents\n\nclass TemplateScriptProperties extends Component {\n  static getSelectedScripts (entity, entities) {\n    const getName = (s) => {\n      const foundScripts = Object.keys(entities).map((k) => entities[k]).filter((sc) => sc.shortid === s.shortid)\n\n      return foundScripts.length ? foundScripts[0].name : ''\n    }\n\n    return (entity.scripts || []).map((s) => ({\n      ...s,\n      name: getName(s)\n    }))\n  }\n\n  renderOrder () {\n    const scripts = TemplateScriptProperties.getSelectedScripts(this.props.entity, this.props.entities)\n\n    return (\n      <span>{scripts.map((s) => <span key={s.shortid}>{s.name + ' '}</span>)}</span>\n    )\n  }\n\n  componentDidMount () {\n    this.removeInvalidScriptReferences()\n  }\n\n  componentDidUpdate () {\n    this.removeInvalidScriptReferences()\n  }\n\n  static title (entity, entities) {\n    if (!entity.scripts || !entity.scripts.length) {\n      return 'scripts'\n    }\n\n    return 'scripts: ' + TemplateScriptProperties.getSelectedScripts(entity, entities).map((s) => s.name).join(', ')\n  }\n\n  removeInvalidScriptReferences () {\n    const { entity, entities, onChange } = this.props\n\n    if (!entity.scripts) {\n      return\n    }\n\n    const updatedScripts = entity.scripts.filter((s) => Object.keys(entities).filter((k) => (\n      entities[k].__entitySet === 'scripts' &&\n      entities[k].shortid === s.shortid &&\n      (entities[k].scope === 'template' || (entities[k].scope == null && !entities[k].isGlobal))\n    )).length)\n\n    if (updatedScripts.length !== entity.scripts.length) {\n      onChange({ _id: entity._id, scripts: updatedScripts })\n    }\n  }\n\n  render () {\n    const { entity, onChange } = this.props\n\n    return (\n      <div className='properties-section'>\n        <div className='form-group'>\n          <EntityRefSelect\n            headingLabel='Select script'\n            newLabel='New script for template'\n            filter={(references) => {\n              const scripts = references.scripts.filter((e) => {\n                return e.scope === 'template' || (e.scope == null && !e.isGlobal)\n              })\n              return { scripts: scripts }\n            }}\n            value={entity.scripts ? entity.scripts.map((s) => s.shortid) : []}\n            onChange={(selected) => onChange({ _id: entity._id, scripts: selected.map((s) => ({ shortid: s.shortid })) })}\n            renderNew={(modalProps) => <sharedComponents.NewEntityModal {...modalProps} options={{ ...modalProps.options, entitySet: 'scripts', defaults: { folder: entity.folder }, activateNewTab: false }} />}\n            multiple\n          />\n          {(entity.scripts && entity.scripts.length) ? <div><span>Run order:</span>{this.renderOrder()}</div> : <div />}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default TemplateScriptProperties\n","import React, { Component } from 'react'\nimport scopeOptions from './scopeOptions'\n\nclass ScriptProperties extends Component {\n  static title (entity, entities) {\n    if (entity.scope != null) {\n      return `scripts (scope: ${entity.scope})`\n    }\n\n    return 'scripts'\n  }\n\n  componentDidMount () {\n    this.removeOldIsGlobalProperty()\n  }\n\n  componentDidUpdate () {\n    this.removeOldIsGlobalProperty()\n  }\n\n  removeOldIsGlobalProperty () {\n    const { entity, onChange } = this.props\n\n    if (entity.isGlobal === true) {\n      onChange({ _id: entity._id, scope: 'global', isGlobal: false })\n    } else if (entity.scope == null && !entity.isGlobal) {\n      onChange({ _id: entity._id, scope: 'template', isGlobal: false })\n    }\n  }\n\n  render () {\n    const { entity, onChange } = this.props\n\n    const currentScopeValue = entity.scope != null ? entity.scope : 'template'\n    const currentScopeOption = scopeOptions.find((opt) => opt.value === currentScopeValue)\n\n    return (\n      <div className='properties-section'>\n        <div className='form-group'>\n          <label>scope</label>\n          <select\n            value={currentScopeValue}\n            onChange={(v) => {\n              const newScope = v.target.value\n              onChange({ _id: entity._id, scope: newScope })\n            }}\n          >\n            {scopeOptions.map((opt) => (\n              <option key={opt.key} value={opt.value} title={opt.desc}>{opt.title}</option>\n            ))}\n          </select>\n          <em>{currentScopeOption.desc}</em>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ScriptProperties\n"],"sourceRoot":""}